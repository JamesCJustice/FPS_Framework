###########
#  Epic   #
###########
Title: Inventory_System
Prereqs: fps_movement
Description:
The player should be able to pick up items
in the world, storing them in their inventory.
They should then be able to scroll through
their inventory and select items. The inventory's
capacity should be limited by total weight.

###########
#  Story  #
###########
Title: Item
Description: 
An item should be able to be stored in
the player's inventory,
equipped to one of their hands,
and dropped. An item should be able
to be converted to(for storage) and 
from(for dropping or equipping) Json.
Items should know which slot they
are equipped to, and whether they
require both hands.

###########
#  Task   #
###########
Title: Create item baseclass
Description:
Create a baseclass for items
with use, hold, drop, save,
and load methods. Properties
should include weight, stackable,
stackSize, twoHanded.

###########
#  Task   #
###########
Title: Item Factory
Description:
An item factory should return
a reference to an instantiated
item, given either the item enum
for creating a new item, or a
Json record for instantiating an
existing item. Said factory must
be expanded as more item classes
are added to the game.

###########
#  Task   #
###########
Title: Equip/Drop items
Description:
Instantiated items should be 
childed to a hand and their
collision and gravity should
be disabled or ignored. When
dropped, the item should be
rechilded and collision and
gravity reinstated.

###########
#  Task   #
###########
Title: Pick up Items
Description:
The player should be able to
aim at near objects in order
to pick them up.

###########
#  Story  #
###########
Title: Inventory
Designation: S-2
Description:
In addition to storing and retrieving
items with the inventory, the inventory
should be able to mark items as being
equipped to a slot. If overencumbered,
the player should have a movement penalty.

###########
#  Task   #
###########
Title: Store stacking items
Description:
Items should be stacked with
their like kind first and added
as new records only if none exist.


###########
#  Story  #
###########
Title: Inventory Menu
Description: 
The player should be able to summon
a menu to interact with
the Inventory. Item info should be displayed
for the active item along with buttons for
any actions available for the item.

###########
#  Task   #
###########
Title: Display scrolling list of items.
Description:
Items should be able to be selected
from list. A scroll up/down arrow should
exist for this as well.

###########
#  Task   #
###########
Title: Display details of highlighted item.
Description:
Show item info as well as create buttons for
item interactions of selected item.

###########
#  Task   #
###########
Title: Create item interaction functions
Description:
Create equip, discard, load, unload methods.

###########
#  Task   #
###########
Title: Display model of highlighted item.
Description:
Render an item model to preview.

###########
#  Story  #
###########
Title: Loot Menu 
Designation: S-4
Description:
The player should be able to
exchange items with other 
inventories via a looting menu.

###########
#  Task   #
###########
Title: select other inventories
Description:
Other inventories should be interactive
the same way instantiated items are.

###########
#  Task   #
###########
Title: Render both inventory lists.
Description:
Not only should both inventories
be visible, but the menu should
shut if either inventory ceases
to exist.

###########
#  Task   #
###########
Title: Give/Take item
Description:
Move item to/from inventory
by clicking.

###########
#  Task   #
###########
Title: Give quantity modal
Description:
Allow user to select quantity
of items to be dropped, default
to all. Pressing continue/A/Enter
should cause part of the stack to
be removed from the player's 
inventory and added to the other
inventory.
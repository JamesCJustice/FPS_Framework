###########
#  Epic   #
###########
Title: Quest System
Prereqs:
Description:
The player should be able 
to start, resolve, and
see the consequences
of quests.


###########
#  Story  #
###########
Title: Framework
Description:
Though quests will rely on custom
code, a framework will structure
this code to operate interchangeably.

###########
#  Task   #
###########
Title: QuestEvent object
Description:
A QuestEvent object should
store information perinent
to quests. Json or XML may
offer a flexible container
for arbitrary data.

###########
#  Task   #
###########
Title: Unique ID for Actors
Description:
All actors and items should have
a unique auto-incremented
id with which they can be
referenced. (So you can say
"Attack that lizard." rather
than "Attack a lizard.")

###########
#  Task   #
###########
Title: Session handles quests.
Description:
The Session should receive
and distribute QuestEvents to
all quests.

###########
#  Task   #
###########
Title: Quest Interface
Description:
Quest should implement:
void Update(QuestEvent event)
Json/Xml GetData()
Json/Xml LoadData()
String GetClassName()
A factory method for
quests should return an
instantiated quest based on
the class name.

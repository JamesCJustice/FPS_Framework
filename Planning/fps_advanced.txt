###########
#  Epic   #
###########
Title: fps_movement
Description:
The player should move
about the world and look around from a first-person
point of view. Jumping, crouching, and sprinting are
also key behaviours. 

###########
#  Story  #
###########
Title: Animation
Animations should blend and mask properly
on the Actor.

###########
#  Task   #
###########
Title: Masking
Description:
Animations should be masked so that
they correspond to left/right arms, 
legs, and torso.

###########
#  Task   #
###########
Title: Aim override
Looking up or down should
override the angle of the hips.

###########
#  Task   #
###########
Title: Ragdoll
Description:
The player should be able to
enter or recover from a ragdoll
state.

###########
#  Task   #
###########
Title: Animation blending
Description:
Animations should blend
as they transition.

###########
#  Task   #
###########
Title: Animation controller
Description:
If possible, a script should be
created to control the animation
logic to provide a simple
interface to easily use with
different models or sets of animations.


###########
#  Story  #
###########
Title: Movement
Description: 
The player should be able to walk and sprint atop
flat surfaces without falling and climb
small inclines.

###########
#  Task   #
###########
Title: WASD movement
Description:
Move(x, z) should check the
destination for collisions before
moving. It should try a second
and third time to move with
increased y value in order to
climb inclines or step over bumps.  

###########
#  Task   #
###########
Title: Walk/Run leg animations
Description:
Provide different animation
states for legs.

###########
#  Task   #
###########
Title: Sprint
Description:
Using sprint should increase
movement speed. Sprinting
should take player out of crouch
if they are in a crouch.

###########
#  Story  #
###########
Title: Jumping
Description:
The player's character should be able to jump,
launching them into the air. They
should not be able to jump again
until they have touched the ground
with their feet. The player should
not be able to jump when falling.

###########
#  Task   #
###########
Title: isFalling() method
Description:
return true when falling

###########
#  Task   #
###########
Title: land() methods
Description:
trigger land() on collision beneath
feet. Should set landed variable to
true.

###########
#  Task   #
###########
Title: Trigger jump animation.
Description:

###########
#  Story  #
###########
Title: Crouching
Description:
The player's character should be able
to crouch, lowering their body down towards
the ground and slowing motion.

###########
#  Task   #
###########
Title: Trigger crouch animation
Description:

###########
#  Task   #
###########
Title: Movement penalty when crouched
Description:

###########
#  Story  #
###########
Title: Input
Description:
The player's inputs need to translate
to actions for the player's character.

###########
#  Task   #
###########
Title: Create DeviceManager class
Description:
Device manager should return
input events from its target
device.

###########
#  Task   #
###########
Title: Create InputEvent class
Description:
InputEvent should account
for buttons(button, action)
and axes(x, y).

###########
#  Task   #
###########
Title: Make Brain and extend it with InputHandler
Description:
InputHandler should call an actor's methods
according to the InputEvents it is provided
by its DeviceManager every update()

###########
#  Story  #
###########
Title: Looking
Description:
The player should be able to turn
their character's body side to side
and turn their head up and down.

###########
#  Task   #
###########
Title: Pivot model's hips.
Description:
Rotate humanoid's skeleton


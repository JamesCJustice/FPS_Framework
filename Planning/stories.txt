This file contains stories to be used on a Kanban board.

Kanban board procedure:
Currently the kanban is hosted via Trello (An in-house solution may be considered in the future): https://trello.com/b/lGaz9YsG/kanban

The five columns of the kanban board:
Not Ready - Blocked by the completion of existing stories.
Ready - Is not blocked, and is ready to work on.
In Progress - Is being actively worked on.
Review - Initial build is complete. Primary testing in progress.
Done -  Story is available for regression testing and should be archived.

Stories can be shared among the following components.
Design - Story creation/grooming, planning, communication.
Creative - Creation of non-programming assets such as music, textures, models, and animations.
Content - Creation of programming and creative-heavy assets such as speech trees, quests, enemies, items.
Testing - Create/execute manual test plans and automated tests.
Interface - Create user interfaces.
Network - Manage security, create external services, and manage netcode.
Core - Provide core classes and 
User experience - Assess the "fun" of existing features, propose alterations/user settings/features to make the game more balanced, cohesive, and "fun".
AI - Create and maintain any artificial intelligences.

Stories should contain three parts:
Title- name to be used on Kanban board
Components- disciplines needed to create this story
Body- a description, estimate, test plan, and any other info to copy/paste into the body of a story on a kanban.  


Title:
Components:
Body:

Title: Overworld(Singleplayer)
Components: Core
Body:
The overworld should handle converting terraincells, items, and actors between
their rendered and unrendered representations.

Title: Treadmill(Singleplayer)
Components: Core, Network
Body:
A treadmill should track a player as they move across the overworld, 
requesting and releasing cells as needed.

Title: Auth service
Components: Network
Body:
The auth service should allow users to create accounts and then log into them once globally for all participating servers.

Title: Save/Load options in Adventure mode pause menu
Components: Interface
Body:
In Adventure mode the pause menu should display an option to save or load the
game. Clicking the load button should lead to the load menu. Clicking the 
save button should cause the overworld to save to the currently loaded file.

Title: Load option in adventure menu
Components: Interface
Body:
When entering the single player advneture mode menu, the player should be able
to navigate to the load menu.

Title: Load menu
Components: Interface, Core
Body:
The load menu should check the saves folder and produce a list of .adventure files
that can be loaded, if any exist.
Selecting a listed file should load adventure mode using that save file.
A back button should appear when in adventure mode, leading back to the pause
menu.
A main menu button should lead to the main menu.

Title: Select adventure name in adventure menu
Components: Interface
Body: 
As a player starting a new single player adventure game, I should be prompted to
select an adventure name. I should not be able to progress to start the game 
until a valid adventure name (one that is not taken and only contains alphanumeric
characters) is in the field.

Title: Save singleplayer Overworld 
Components: Core
Body: 
Each game save should be an SQLite database file with an extension of .adventure.
Each entity saved (Actor/Item/TerrainCell) should have one or more normalized
tables to store data in.

Title: Normalize extra data in actor/item records 
Components: Core
Body: 
ActorData and ItemData should both contain a dictionary<string, string>
containing scalar(or csv) data that can be used when loading said data. 

Title: Load singleplayer Overworld 
Components: Core
Body: 
When loading from a save file, each entity should be loaded into its unrendered
form in place of using the cartographer to generate a new world.